
-- Kodu Paylaşmayın 
-- Yakında Daha D@ss@kli bi Gui Gelicek

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local LP = Players.LocalPlayer



local BioLab = game.Workspace:FindFirstChild("BioLab")
local Bank2 = game.Workspace:FindFirstChild("Bank2")
local Factory = game.Workspace:FindFirstChild("Factory")
local Hospital3 = game.Workspace:FindFirstChild("Hospital3")
local Hotel2 = game.Workspace:FindFirstChild("Hotel2")
local House2 = game.Workspace:FindFirstChild("House2")
local Mansion2 = game.Workspace:FindFirstChild("Mansion2")
local MilBase = game.Workspace:FindFirstChild("MilBase")
local Office3 = game.Workspace:FindFirstChild("Office3")
local PoliceStation = game.Workspace:FindFirstChild("PoliceStation")
local ResearchFacility = game.Workspace:FindFirstChild("ResearchFacility")
local Workplace = game.Workspace:FindFirstChild("Workplace")


local roles = {}
local attackedPlayers = {}
local canAttack = true


 
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local function OyuncuHayattaMi(player)
    return player and player.Character and player.Character:FindFirstChild("Humanoid")
       and player.Character.Humanoid.Health > 0
end

local function BicakSaldir(knifeServer)
    if knifeServer and knifeServer:FindFirstChild("Stab") then
        knifeServer.Stab:FireServer("Slash")
    end
end

local function TekSeferlikSaldiri()
    if not LocalPlayer.Character then return end
    local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
    local localPlayerRole = roles[LocalPlayer.Name] and roles[LocalPlayer.Name].Role or nil

    if localPlayerRole ~= "Murderer" then
        print("[AutoKill] Murderer değilsin, işlem iptal edildi.")
        return
    end

    local knife = LocalPlayer.Backpack:FindFirstChild("Knife")
    if knife then
        knife.Parent = LocalPlayer.Character
    end

    local knifeServer = LocalPlayer.Character:FindFirstChild("Knife") and LocalPlayer.Character.Knife:FindFirstChild("KnifeServer")
    if not knifeServer then
        print("[AutoKill] Bıçak veya KnifeServer bulunamadı.")
        return
    end

    local attacked = {}

    for playerName, data in pairs(roles) do
        if playerName ~= LocalPlayer.Name and data.Role == "Sheriff" then
            local targetPlayer = Players:FindFirstChild(playerName)
            if targetPlayer and OyuncuHayattaMi(targetPlayer) and targetPlayer.Character and not attacked[playerName] then
                local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if targetHRP then
                    
                    targetHRP.CFrame = hrp.CFrame * CFrame.new(0, 0, -2)
                    
                    BicakSaldir(knifeServer)
                    print("[AutoKill] " .. playerName .. " saldırıldı.")
                    attacked[playerName] = true

                    task.wait(0.1)
                end
            end
        end
    end

    print("[AutoKill] Tüm Sherifflere saldırı tamamlandı. Artık çalışmayacak.")
end




local function isAlive(player)
    return player and player.Character and player.Character:FindFirstChild("Humanoid")
       and player.Character.Humanoid.Health > 0
end

local function slash(knifeServer)
    if knifeServer and knifeServer:FindFirstChild("Stab") then
        knifeServer.Stab:FireServer("Slash")
    end
end

local function attackAllOnce()
    if not LocalPlayer.Character then return end
    local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()

    local lpRole = roles[LocalPlayer.Name] and roles[LocalPlayer.Name].Role or nil
    if lpRole ~= "Murderer" then
        print("[AutoKill] Murderer değilsin, işlem iptal edildi.")
        return
    end

    local knife = LocalPlayer.Backpack:FindFirstChild("Knife")
    if knife then
        knife.Parent = LocalPlayer.Character
    end

    local knifeServer = LocalPlayer.Character:FindFirstChild("Knife") and LocalPlayer.Character.Knife:FindFirstChild("KnifeServer")
    if not knifeServer then
        print("[AutoKill] Bıçak veya KnifeServer bulunamadı.")
        return
    end

    for playerName, data in pairs(roles) do
        if playerName ~= LocalPlayer.Name and data.Role ~= "Murderer" and (data.Role == "Innocent" or data.Role == "Sheriff") then
            local targetPlayer = Players:FindFirstChild(playerName)
            if targetPlayer and isAlive(targetPlayer) and targetPlayer.Character and not attackedPlayers[playerName] then
                local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if targetHRP then
                    targetHRP.CFrame = hrp.CFrame * CFrame.new(0, 0, -3)
                    
                    if canAttack then
                        canAttack = false
                        slash(knifeServer)
                        print("[AutoKill] " .. playerName .. " saldırıldı.")
                        attackedPlayers[playerName] = true
                        task.wait(0.1)  -- ufak bekleme
                        canAttack = true
                    end
                end
            end
        end
    end

    print("[AutoKill] Tüm Innocent ve Sherifflere saldırı tamamlandı. Artık çalışmayacak.")
end



getgenv().CMurd    = getgenv().CMurd or false   
getgenv().CSherif  = getgenv().CSherif or false 
getgenv().CHero    = getgenv().CHero or false
getgenv().CInno    = getgenv().CInno or false
getgenv().GunCharm = getgenv().GunCharm or false

getgenv().Sherif = getgenv().Sherif or false
getgenv().Murderer = getgenv().Murderer or false
getgenv().Inno = getgenv().Inno or false
getgenv().gchsrm = getgenv().gchsrm or false
getgenv().Sesp = getgenv().Sesp or false
getgenv().Mesp = getgenv().Mesp or false
getgenv().Aesp = getgenv().Aesp or false
getgenv().gunesp = getgenv().gunesp or false


getgenv().DCoins = getgenv().DCoins or false
getgenv().DWepon = getgenv().DWepon or false
getgenv().HeadInvisible = getgenv().HeadInvisible or false
getgenv().clip = getgenv().clip or false
getgenv().infjump = getgenv().infjump or false
getgenv().hcharm = getgenv().hcharm or false
getgenv().HEsp = getgenv().HEsp or false

local roles = {}
local Murder, Sheriff, Hero

task.spawn(function()
	while task.wait(0.5) do
		local data = ReplicatedStorage:FindFirstChild("GetPlayerData", true)
		if data then
			roles = data:InvokeServer()
			Murder, Sheriff, Hero = nil, nil, nil
			for name, info in pairs(roles) do
				if info.Role == "Murderer" then Murder = name
				elseif info.Role == "Sheriff" then Sheriff = name
				elseif info.Role == "Hero" then Hero = name end
			end
		end
	end
end)

local function IsAlive(plr)
	local data = roles[plr.Name]
	return data and not data.Killed and not data.Dead
end


local function isAlive(plr)
    local info = roles[plr.Name]
    return info and not info.Killed and not info.Dead
end

local function addBox(part, name, color)
    if part:IsA("BasePart") and not part:FindFirstChild(name) then
        local b = Instance.new("BoxHandleAdornment")
        b.Name           = name
        b.Adornee        = part
        b.AlwaysOnTop    = true
        b.ZIndex         = 0
        b.Size           = part.Size
        b.Transparency   = 0.7
        b.Color3         = color
        b.Parent         = part
    end
end

local function clearBoxes(model, name)
    if not model then return end
    for _, p in pairs(model:GetChildren()) do
        local b = p:FindFirstChild(name)
        if b then b:Destroy() end
    end
end

local function applyCharm(plr)
    if plr == LP or not plr.Character then return end

    local roleColor, enabled
    if     plr.Name == Murder  then enabled, roleColor = getgenv().CMurd,   Color3.fromRGB(255,  0,  0)
    elseif plr.Name == Sheriff then enabled, roleColor = getgenv().CSherif, Color3.fromRGB(  0,  0,255)
    elseif plr.Name == Hero    then enabled, roleColor = getgenv().CHero,   Color3.fromRGB(255,255,  0)
    else                          enabled, roleColor = getgenv().CInno,    Color3.fromRGB(  0,255,  0)
    end

    if enabled and isAlive(plr) then
        for _, part in ipairs(plr.Character:GetChildren()) do
            addBox(part, "CharmESP", roleColor)
        end
    else
        clearBoxes(plr.Character, "CharmESP")
    end
end

local function hookPlayer(plr)
    if plr == LP then return end
    plr.CharacterAdded:Connect(function()
        task.wait(0.15)
        applyCharm(plr)
    end)
end

local mapNames = {
    "BioLab","Bank2","Factory","Hospital3","Hotel2","House2",
    "Mansion2","MilBase","Office3","PoliceStation",
    "ResearchFacility","Workplace"
}

local function charmGun(part)
    if part.Name=="GunDrop" and part:IsA("BasePart") then
        if getgenv().GunCharm then
            addBox(part, "GunCharm", Color3.fromRGB(255, 0, 255))
        else
            clearBoxes(part, "GunCharm")
        end
    end
end

Workspace.ChildAdded:Connect(function(model)
    if not getgenv().GunCharm then return end
    if model:IsA("Model") then
        for _, obj in ipairs(model:GetDescendants()) do
            charmGun(obj)
        end
    end
end)

task.spawn(function()
    while true do
        local getter = ReplicatedStorage:FindFirstChild("GetPlayerData", true)
        if getter then
            roles = getter:InvokeServer()
            Murder, Sheriff, Hero = nil, nil, nil
            for name, info in pairs(roles) do
                if info.Role == "Murderer" then Murder = name
                elseif info.Role == "Sheriff" then Sheriff = name
                elseif info.Role == "Hero"    then Hero    = name end
            end
        end
        
        for _, plr in ipairs(Players:GetPlayers()) do
            applyCharm(plr)
        end
        
        if getgenv().GunCharm then
            for _, mapName in ipairs(mapNames) do
                local map = Workspace:FindFirstChild(mapName)
                if map then
                    for _, obj in ipairs(map:GetChildren()) do
                        charmGun(obj)
                    end
                end
            end
        end

        task.wait(0.5)
    end
end)


for _, plr in ipairs(Players:GetPlayers()) do hookPlayer(plr) end
Players.PlayerAdded:Connect(hookPlayer)




local function UpdateHighlights()
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character then
			local char = plr.Character
			local hl = char:FindFirstChild("Highlight") or Instance.new("Highlight", char)
			hl.Adornee = char
			hl.FillTransparency = 0.5
			hl.OutlineTransparency = 1

			if plr.Name == Sheriff and IsAlive(plr) then
				hl.FillColor = Color3.fromRGB(0, 0, 225)
				hl.Enabled = getgenv().Sherif
			elseif plr.Name == Murder and IsAlive(plr) then
				hl.FillColor = Color3.fromRGB(225, 0, 0)
				hl.Enabled = getgenv().Murderer
			elseif plr.Name == Hero and IsAlive(plr) then
				hl.FillColor = Color3.fromRGB(0, 255, 255)
				hl.Enabled = getgenv().hcharm
			else
				hl.FillColor = Color3.fromRGB(0, 225, 0)
				hl.Enabled = getgenv().Inno
			end
		end
	end
end

task.spawn(function()
	while task.wait(0.5) do
		UpdateHighlights()
	end
end)


local function CreateESP(plr, char)
	local hum = char:WaitForChild("Humanoid")
	local head = char:WaitForChild("Head")

	local text = Drawing.new("Text")
	text.Center = true
	text.Outline = true
	text.Font = 2
	text.Size = 16
	text.Visible = false

	local function remove()
		text.Visible = false
		text:Remove()
	end

	local conn = game:GetService("RunService").RenderStepped:Connect(function()
		if not char:IsDescendantOf(workspace) or hum.Health <= 50 then
			remove()
			conn:Disconnect()
			return
		end

		local pos, onscreen = Camera:WorldToViewportPoint(head.Position)
		if onscreen then
			text.Position = Vector2.new(pos.X, pos.Y - 35)
			text.Text = "  " .. plr.Name .. "  "

			if plr.Name == Murder and IsAlive(plr) then
				text.Color = Color3.fromRGB(255, 0, 0)
				text.Visible = getgenv().Mesp
			elseif plr.Name == Sheriff and IsAlive(plr) then
				text.Color = Color3.fromRGB(0, 0, 255)
				text.Visible = getgenv().Sesp
			elseif plr.Name == Hero and IsAlive(plr) then
				text.Color = Color3.fromRGB(0, 255, 255)
				text.Visible = getgenv().HEsp
			else
				text.Color = Color3.fromRGB(0, 255, 0)
				text.Visible = getgenv().Aesp
			end
		else
			text.Visible = false
		end
	end)

	hum.Died:Connect(function()
		remove()
		conn:Disconnect()
	end)

	char.AncestryChanged:Connect(function(_, p)
		if not p then
			remove()
			conn:Disconnect()
		end
	end)
end


local function OnPlayerAdded(plr)
	if plr == LocalPlayer then return end
	if plr.Character then
		CreateESP(plr, plr.Character)
	end
	plr.CharacterAdded:Connect(function(char)
		CreateESP(plr, char)
	end)
end

for _, plr in ipairs(Players:GetPlayers()) do
	OnPlayerAdded(plr)
end
Players.PlayerAdded:Connect(OnPlayerAdded)


	

local function HandleGunDropESP(part)
	if not getgenv().gunesp then return end

	local text = Drawing.new("Text")
	text.Center = true
	text.Outline = true
	text.Font = 2
	text.Size = 16
	text.Color = Color3.fromRGB(255, 255, 0)
	text.Visible = false

	local conn = RunService.RenderStepped:Connect(function()
		if not part:IsDescendantOf(workspace) then
			text:Remove()
			conn:Disconnect()
			return
		end
		if not getgenv().gunesp then
			text.Visible = false
			return
		end

		local pos, onscreen = Camera:WorldToViewportPoint(part.Position)
		if onscreen then
			text.Position = Vector2.new(pos.X, pos.Y - 25)
			text.Text = "[ GunDrop ]"
			text.Visible = true
		else
			text.Visible = false
		end
	end)

	part.AncestryChanged:Connect(function(_, p)
		if not p then
			text.Visible = false
			text:Remove()
			conn:Disconnect()
		end
	end)
end



	local mapNames = {
		"BioLab", "Bank2", "Factory", "Hospital3", "Hotel", "House2",
		"Mansion2", "MilBase", "Office3", "PoliceStation", "ResearchFacility", "Workplace"
	}
	

RunService.Heartbeat:Connect(function()
    if getgenv().gchsrm or getgenv().gunesp then
        for _, mapName in ipairs(mapNames) do
            local map = Workspace:FindFirstChild(mapName)
            if map then
                for _, part in ipairs(map:GetChildren()) do
                    if part.Name == "GunDrop" and part:IsA("BasePart") then
                        if getgenv().gchsrm and not part:FindFirstChild("Highlight") then
                            local hl = Instance.new("Highlight")
                            hl.Name = "Highlight"
                            hl.FillColor = Color3.fromRGB(255, 0, 0)
                            hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                            hl.FillTransparency = 0.5
                            hl.OutlineTransparency = 0
                            hl.Adornee = part
                            hl.Parent = part
                        end
                        HandleGunDropESP(part)
                    end
                end
            end
        end
    end
end)


Workspace.ChildAdded:Connect(function(child)
    if child:IsA("Model") then
        for _, obj in ipairs(child:GetDescendants()) do
            if obj.Name == "GunDrop" and obj:IsA("BasePart") then
                if getgenv().gchsrm then
                    -- Highlight ekle
                    local hl = Instance.new("Highlight")
                    hl.Name = "Highlight"
                    hl.FillColor = Color3.fromRGB(255, 0, 0)
                    hl.OutlineColor = Color3.fromRGB(255, 255, 255)
                    hl.FillTransparency = 0.5
                    hl.OutlineTransparency = 0
                    hl.Adornee = obj
                    hl.Parent = obj
                end
                HandleGunDropESP(obj)
            end
        end
    end
end)




local function HasTool(player, toolName)
	if player:FindFirstChild("Backpack") then
		for _, item in pairs(player.Backpack:GetChildren()) do
			if item.Name == toolName then
				return true
			end
		end
	end
	if player.Character and player.Character:FindFirstChild(toolName) then
		return true
	end
	return false
end

local function GetPlayerWithTool(toolName)
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and HasTool(player, toolName) then
			return player
		end
	end
	return nil
end

local function TeleportToToolOwner(toolName)
	local targetPlayer = GetPlayerWithTool(toolName)
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if hrp then
			hrp.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(2, 0, 0)
		end
	end
end


local coinMaps = {
    "BioLab", "Bank2", "Factory", "Hospital3", "Hotel", "House2",
    "Mansion2", "MilBase", "Office3", "PoliceStation", "ResearchFacility", "Workplace"
}

local function findCurrentMap()
    for _, name in ipairs(coinMaps) do
        local map = Workspace:FindFirstChild(name)
        if map then
            return map
        end
    end
    return nil
end

local function removeCoinContainer(map)
    if map then
        local coin = map:FindFirstChild("CoinContainer")
        if coin then
            coin:Destroy()
        end
    end
end

task.spawn(function()
	while true do
		if getgenv().DCoins then
			local currentMap = findCurrentMap()
			removeCoinContainer(currentMap)
		end
		task.wait(1)
	end
end)



game:GetService("UserInputService").JumpRequest:Connect(function()
	if getgenv().infjump then
		local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
		if humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
end)


local function moveGunToPlayer(gun)
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if gun:IsA("BasePart") then
		gun.CFrame = hrp.CFrame
	end
end

local function moveAllGunDropsToPlayer()
	for _, item in ipairs(workspace:GetChildren()) do
		for _, child in ipairs(item:GetChildren()) do
			if child.Name == "GunDrop" and child:IsA("BasePart") then
				moveGunToPlayer(child)
			end
		end
	end
end

local beltsToRemove = {
	{ torso = "LowerTorso", accessory = "KnifeBelt" },
	{ torso = "LowerTorso", accessory = "GunBelt" },
	{ torso = "UpperTorso", accessory = "KnifeBack" }
}

local function removeAccessory(accessory)
	if accessory and accessory.Parent then
		accessory:Destroy()
	end
end

local function monitorTorsoAccessories(character)
	local connectedTorsoEvents = {}

	for _, item in ipairs(beltsToRemove) do
		local torso = character:FindFirstChild(item.torso)
		if torso and not connectedTorsoEvents[torso] then
			connectedTorsoEvents[torso] = true

			local accessory = torso:FindFirstChild(item.accessory)
			if accessory then
				removeAccessory(accessory)
			end

			torso.ChildAdded:Connect(function(child)
				if child.Name == item.accessory then
					removeAccessory(child)
				end
			end)
		end
	end
end

local function setupCharacter(character)
	task.spawn(function()
		while character.Parent do
			if getgenv().DWepon then
				monitorTorsoAccessories(character)
				for _, item in ipairs(beltsToRemove) do
					local torso = character:FindFirstChild(item.torso)
					if torso then
						local accessory = torso:FindFirstChild(item.accessory)
						if accessory then
							removeAccessory(accessory)
						end
					end
				end
			end
			task.wait(0.5)
		end
	end)
end

local function setupPlayer(player)
	if player.Character then
		setupCharacter(player.Character)
	end
	player.CharacterAdded:Connect(setupCharacter)
end

for _, player in ipairs(Players:GetPlayers()) do
	setupPlayer(player)
end

Players.PlayerAdded:Connect(setupPlayer)


local function makeHeadInvisible(character)
	local head = character:FindFirstChild("Head")
	if not head then return end

	head.Transparency = 1

	for _, child in ipairs(head:GetChildren()) do
		if child:IsA("Decal") then
			child.Transparency = 1
		end
	end

	head.ChildAdded:Connect(function(child)
		if child:IsA("Decal") then
			child.Transparency = 1
		end
	end)
end

local function onCharacterAdded(character)
	character:WaitForChild("Head")
	if getgenv().HeadInvisible then
		makeHeadInvisible(character)
	end
end

if LocalPlayer.Character then
	onCharacterAdded(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)


task.spawn(function()
	while true do
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head") then
			if getgenv().HeadInvisible then
				makeHeadInvisible(LocalPlayer.Character)
			end
		end
		task.wait(1)
	end
end)


local library = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/alperalp808/Ui-Libs/refs/heads/main/Shadow%20Lib"))()
local Main = library:CreateWindow("Dildo Hub MM2 Script By $hit Talker","Emerald")

local tab = Main:CreateTab("İnfo")
local tab1 = Main:CreateTab("Player")
local tab2 = Main:CreateTab("Teleport")
local tab3 = Main:CreateTab("Combat")
local tab4 = Main:CreateTab("FPS")


tab:CreateDropdown("Show Type",{"Highlight","Charm"},function(a)
		getgenv().Type = a
end) 

tab:CreateToggle("Show Murder",function(a)
    if getgenv().Type == "Highlight" then
        getgenv().Murderer = a
    elseif getgenv().Type == "Charm" then
        getgenv().CMurd = a
    end
end)

tab:CreateToggle("Show Sherif",function(a)
    if getgenv().Type == "Highlight" then
        getgenv().Sherif = a
        getgenv().hcharm = a
    elseif getgenv().Type == "Charm" then
        getgenv().CSherif = a
        getgenv().CHero = a
    end
end)

tab:CreateToggle("Show İnnocent",function(a)
    if getgenv().Type == "Highlight" then
        getgenv().Inno = a
    elseif getgenv().Type == "Charm" then
        getgenv().CInno = a
    end
end)

tab:CreateToggle("Show Gun",function(a)
    if getgenv().Type == "Highlight" then
getgenv().GunCharm = true
    elseif getgenv().Type == "Charm" then
        getgenv().gchsrm = a
    end
end)

-- Esp

tab:CreateToggle("Murderer Esp",function(a)
getgenv().Mesp = a
end)

tab:CreateToggle("Sherif Esp",function(a)
getgenv().Sesp = a
	getgenv().HEsp = a
end)

tab:CreateToggle("İnnocent Esp",function(a)
getgenv().Aesp = a
end)

tab:CreateToggle("Gun Esp",function(a)
getgenv().gunesp = a
end)

--Player Settings


tab1:CreateSlider("Walk Speed",1,40,function(a)
    game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = a
end)

tab1:CreateSlider("Jump Power",1,100,function(a)
    game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = a
end)

tab1:CreateButton("Reset",function()
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 16
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 50
end)

tab1:CreateButton("Legit",function()
	while wait() do
		game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 17
		game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 53
	end
end)

tab1:CreateToggle("Noclip",function(a)
        getgenv().clip = a
  if getgenv().clip == true then
    NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
      for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
        if v:IsA("BasePart") and v.CanCollide == true then
          v.CanCollide = false
        end
      end
    end)
  elseif getgenv().clip == false and NoclipLoop then
    NoclipLoop:Disconnect()
  end
end)



tab1:CreateToggle("İnf Jump",function(a)
getgenv().infjump = a
end)

tab1:CreateToggle("TpTool",function(a)
	if a then
local tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "TpTool"
tool.RequiresHandle = false
tool.Activated:Connect(function()
	local hrp = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	local pos = game.Players.LocalPlayer:GetMouse().Hit.Position
	hrp.CFrame = CFrame.new(pos + Vector3.new(0,5,0))
end)
	else
		game.Players.LocalPlayer.Backpack.TpTool:destroy()
	end
end)

-- Teleport

tab2:CreateDropdown("Place",{"Map","Lobby","Murderer","Sherif"},function(a)
		getgenv().target = a
end)

tab2:CreateButton("Teleport",function()
    if getgenv().target == "Murderer" then
        TeleportToKnifeOwner()
    elseif getgenv().target == "Sherif" then
        TeleportToGunOwner()
    elseif getgenv().target == "Lobby" then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-108.40426635742188, 138.34991455078125, 43.325035095214844)
    elseif getgenv().target == "Map" then
    	if BioLab then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1168.6397705078125, 43.00277328491211, 260.98199462890625)
    	elseif Bank2 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3093.38525390625, -117.20120239257812, -899.510009765625)
    	elseif Factory then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4908.18359375, -129.6702423095703, 1266.6065673828125)
    	elseif Hospital3 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2136.324951171875, -119.0749740600586, -2710.94970703125)
    	elseif Hotel2 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(474.275146484375, -132.40109252929688, 813.3499755859375)
    	elseif House2 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(87.9775390625, -103.57410430908203, -1106.449462890625)
    	elseif Mansion2 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2430.149658203125, -122.00093078613281, -2003.3994140625)
    	elseif MilBase then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4833.5263671875, -123.944580078125, 2956.6494140625)
    	elseif Office3 then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1307.524658203125, -89.78768920898438, -3006.3935546875)
    	elseif PoliceStation then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4410.72509765625, -84.50072479248047, 145.75503540039062)
    	elseif ResearchFacility then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1048.675048828125, -93.30105590820312, 16.449966430664062)
    	elseif Workplace then
    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1779.2158203125, -122.20083618164062, -664.9170532226562)
    	end
    end
end)

tab3:CreateButton("Get Gun",function()
    moveAllGunDropsToPlayer()
end)


tab3:CreateToggle("Auto Get Gun",function(a)
while wait() do
	if a then
		moveAllGunDropsToPlayer()
	end
end
end)

tab3:CreateButton("Kill All",function()
    attackAllOnce()
end)

tab3:CreateButton("Kill Sherif",function()
TekSeferlikSaldiri()
end)




tab4:CreateToggle("Delete Coins",function(a)
	getgenv().DCoins = a
end)


tab4:CreateToggle("Hide Coins",function(a)
getgenv().hideCoin = a
end)


tab4:CreateToggle("Delete Wepons",function(a)
	getgenv().DWepon = a
end)

tab4:CreateToggle("No Head",function(a)
	getgenv().HeadInvisible = a
end)

tab4:CreateToggle("Anti fling",function(a)
    getgenv().lip = a
if getgenv().lip == true then
    NoclipLoop = game:GetService("RunService").Stepped:Connect(function()
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and player.Character then
                for _, part in pairs(player.Character:GetChildren()) do
                    if part:IsA("BasePart") and part.CanCollide == true then
                        part.CanCollide = false
                    end
                end
            end
        end
    end)
elseif getgenv().lip == false and NoclipLoop then
    NoclipLoop:Disconnect()
end
end)

tab:Show()

local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
  if gameProcessed then return end
  
  if input.KeyCode == Enum.KeyCode.P then
    local gui = CoreGui:FindFirstChild("Allah")
    if gui and gui:IsA("ScreenGui") and gui.Enabled == true then
      gui.Enabled = false
    elseif gui and gui:IsA("ScreenGui") and gui.Enabled == false then
      gui.Enabled = true
    end
  end
end)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer


if CoreGui:FindFirstChild("DraggableTouchButtonGui") then
    CoreGui:FindFirstChild("DraggableTouchButtonGui"):Destroy()
end


local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DraggableTouchButtonGui"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = CoreGui -- resetlense bile kalır


local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 40,0, 30)
button.Position = UDim2.new(0, 100, 0, 100) -- başlangıç yeri
button.BackgroundColor3 = Color3.new(0, 0, 0) -- siyah
button.Text = ""
button.AutoButtonColor = false
button.BorderSizePixel = 0
button.Parent = screenGui

-- Sürükleme sistemi
local dragging = false
local dragStart, startPos

button.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = button.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
		local delta = input.Position - dragStart
		button.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
end)


button.MouseButton1Click:Connect(function()
	local gui = CoreGui:FindFirstChild("Allah")
	if gui and gui:IsA("ScreenGui") and gui.Enabled == true then
		gui.Enabled = false
	elseif gui and gui:IsA("ScreenGui") and gui.Enabled == false then
		gui.Enabled = true
	end
end)


local RunService = game:GetService("RunService")
local workspace = game:GetService("Workspace")

local mapNames = {
    "BioLab", "Bank2", "Factory", "Hospital3", "Hotel", "House2",
    "Mansion2", "MilBase", "Office3", "PoliceStation", "ResearchFacility", "Workplace"
}

local function findCurrentMap()
    for _, mapName in ipairs(mapNames) do
        local map = workspace:FindFirstChild(mapName)
        if map then return map end
    end
    return nil
end

local function setInvisible(obj)
    if obj:IsA("BasePart") then
        if obj.Transparency ~= 1 then
            obj.Transparency = 1
        end
        if obj.CanCollide ~= false then
            obj.CanCollide = false
        end
        if obj.CastShadow ~= false then
            obj.CastShadow = false
        end
    end
    for _, child in ipairs(obj:GetChildren()) do
        setInvisible(child)
    end
end


getgenv().hideCoin = getgenv().hideCoin or false

RunService.Stepped:Connect(function()
    if not getgenv().hideCoin then return end  

    local map = findCurrentMap()
    if not map then return end

    local coinContainer = map:FindFirstChild("CoinContainer")
    if not coinContainer then return end

    setInvisible(coinContainer)
end)
